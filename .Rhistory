source("http://blogs.5eanalytics.com/RCode/PCA_functions.R")
display_pc(domotic_pca, cutoff = 0.5)
plot(domotic_pca, choix  ="var")
domotic_pca$var$coord = loadings.pcarot
display_pc(domotic_pca, cutoff = 0.5)
######### PART D #########
plot(domotic_pca, choix  ="var")
display_pc(domotic_pca, cutoff = .5)
summary(domotic_pca)
#Matrix multiplication
round(domotic_pca$var$coord[,1:5],3) # show 5 dimensions
#Matrix multiplication
round(domotic_pca$var$coord[,1:5],3) # show 5 dimensions
PC = as.matrix(domotic) %*% as.matrix(domotic_pca$var$coord[,1:5])
colnames(PC) = c("LIGHTING & WEATHER", "TEMPERATURE", "CO2", "HUMIDITY","PRECIPITATION")
domotic_updated =cbind(domotic, PC)
str(domotic_updated)
domotic_updated
#Matrix multiplication
round(domotic_pca$var$coord[,1:5],3) # show 5 dimensions
PC = as.matrix(domotic) %*% as.matrix(domotic_pca$var$coord[,1:5])
PC
colnames(PC) = c("LIGHTING & WEATHER", "TEMPERATURE", "CO2", "HUMIDITY","PRECIPITATION")
domotic_updated =cbind(domotic, PC)
str(domotic_updated)
cor(domotic_updated, use="pairwise.complete.obs")
str(domotic_updated)
domotic <- read.csv("~/Documents/A_Hofstra University/Spring 2025/IT 270 A - Dr Alex/HW2/datasets_domotic1.txt", sep="")
domotic <- read.csv("~/Documents/A_Hofstra University/Spring 2025/IT 270 A - Dr Alex/HW2/datasets_domotic1.txt", sep="")
domotic <- read.csv("~/Documents/A_Hofstra University/Spring 2025/IT 270 A - Dr Alex/HW2/datasets_domotic1.txt", sep="")
#####################  DATA CLEANING  #####################
#Remove Zeros columns
domotic=domotic[,c(-19,-20,-21)] #Reduced to 19 variables
#Remove rows 719, 720, and 770
domotic=domotic[c(-719,-720,-770),]
domotic_pca = PCA(domotic[,c(-1,-2)], scale.unit=T, graph=T, ncp=10)
#Method 1: Kaiser Rule and Method 2: Proportion of Variance
summary(domotic_pca)
PC = as.matrix(domotic[,c(1,2)]) %*% as.matrix(domotic_pca$var$coord[,1:5])
PC = as.matrix(domotic[,1:2]) %*% as.matrix(domotic_pca$var$coord[,1:5])
PC = as.matrix(domotic[,1]) %*% as.matrix(domotic_pca$var$coord[,1:5])
PC = as.matrix(domotic) %*% as.matrix(domotic_pca$var$coord[,1:5])
PC = as.matrix(domotic[,c(-1,-2)]) %*% as.matrix(domotic_pca$var$coord[,1:5])
colnames(PC) = c("LIGHTING & WEATHER", "TEMPERATURE", "CO2", "HUMIDITY","PRECIPITATION")
domotic_updated =cbind(domotic, PC)
domotic_updated
domotic_final = domotic_updated[,c(1:2,22:26)]
domotic_final
str(domotic_updated)
cor(domotic_updated, use="pairwise.complete.obs")
cor(domotic_updated[,c(-1,-2)], use="pairwise.complete.obs")
cor(domotic_final[,c(-1,-2)], use="pairwise.complete.obs")
round(cor(domotic_final[,c(-1,-2)], use="pairwise.complete.obs"),2)
round(cor(domotic_final[,c(-1,-2)], use="pairwise.complete.obs"),3)
corrplot(cor(domotic_final[,c(-1,-2)])
corrplot(cor(domotic_final[,c(-1,-2)]))
corrplot(cor(domotic_final[,c(-1,-2)]))
library(corrplot)
corrplot(cor(domotic_final[,c(-1,-2)]))
domotic <- read.csv("~/Documents/A_Hofstra University/Spring 2025/IT 270 A - Dr Alex/HW2/datasets_domotic1.txt", sep="")
##################### PART A: EXPLORATION   #####################
View(domotic)
nrow(domotic)
ncol(domotic)
summary(domotic)
str(domotic)
nrow(domotic[complete.cases(domotic),]) #2764 rows
#Variance
for(i in 1:ncol(domotic)){
print(var(domotic[,i]))
}
#Boxplot
help(boxplot)
boxplot(domotic$Temperature_Comedor_Sensor,xlab="Temperature Comedor Sensor")
boxplot(domotic$Temperature_Habitacion_Sensor, xlab="Temperature Habitacion Sensor")
boxplot(domotic$Weather_Temperature, xlab="Weather Temperature")
boxplot(domotic$CO2_Comedor_Sensor, xlab="CO2 Comedor Sensor")
boxplot(domotic$CO2_Habitacion_Senso, xlab="CO2 Habitacion Sensor")
boxplot(domotic$Humedad_Comedor_Sensor, xlab="Humedad Comedor Sensor")
boxplot(domotic$Humedad_Habitacion_Sensor, xlab="Humedad Habitacion Sensor")
boxplot(domotic$Lighting_Comedor_Sensor, xlab="Lighting Comedor Sensor")
boxplot(domotic$Lighting_Habitacion_Sensor, xlab = "Lighting Habitacion Sensor")
boxplot(domotic$Precipitacion, xlab = "Precipitacion")
boxplot(domotic$Meteo_Exterior_Crepusculo, xlab= "Meteo Exterior Crepusculo")
boxplot(domotic$Meteo_Exterior_Viento, xlab= "Meteo_Exterior_Viento")
boxplot(domotic$Meteo_Exterior_Sol_Oest,xlab= "Meteo_Exterior_Sol_Oest")
boxplot(domotic$Meteo_Exterior_Sol_Est,xlab= "Meteo_Exterior_Sol_Est")
boxplot(domotic$Meteo_Exterior_Sol_Sud, xlab = "Meteo_Exterior_Sol_Sud")
boxplot(domotic$Meteo_Exterior_Piranometro, xlab = "Meteo_Exterior_Piranometro")
boxplot(domotic$Exterior_Entalpic_1, xlab = "Exterior_Entalpic_1")
boxplot(domotic$Exterior_Entalpic_2, xlab = "Exterior_Entalpic_2")
boxplot(domotic$Exterior_Entalpic_turbo, xlab = "Exterior_Entalpic_turbo")
boxplot(domotic$Temperature_Exterior_Sensor, xlab = "Temperature_Exterior_Sensor")
boxplot(domotic$Humedad_Exterior_Sensor, xlab = "Humedad_Exterior_Sensor")
boxplot(domotic$Day_Of_Week, xlab = "Day_Of_Week")
#outlier detection
out1=boxplot.stats(domotic$Lighting_Habitacion_Sensor)$out
max(out1)
which(domotic$Lighting_Habitacion_Sensor %in% max(out1))
out2=boxplot.stats(domotic$Meteo_Exterior_Viento)$out
which(domotic$Meteo_Exterior_Viento %in% c(out2))
help(hist)
#Histogram
hist(domotic$Temperature_Comedor_Sensor,xlab="Temperature Comedor Sensor")
hist(domotic$Temperature_Habitacion_Sensor, xlab="Temperature Habitacion Sensor")
hist(domotic$Weather_Temperature, xlab="Weather Temperature")
hist(domotic$CO2_Comedor_Sensor, xlab="CO2 Comedor Sensor")
hist(domotic$CO2_Habitacion_Senso, xlab="CO2 Habitacion Sensor")
hist(domotic$Humedad_Comedor_Sensor, xlab="Humedad Comedor Sensor")
hist(domotic$Humedad_Habitacion_Sensor, xlab="Humedad Habitacion Sensor")
hist(domotic$Lighting_Comedor_Sensor, xlab="Lighting Comedor Sensor")
hist(domotic$Lighting_Habitacion_Sensor, xlab = "Lighting Habitacion Sensor")
hist(domotic$Precipitacion, xlab = "Precipitacion")
hist(domotic$Meteo_Exterior_Crepusculo, xlab= "Meteo Exterior Crepusculo")
hist(domotic$Meteo_Exterior_Viento, xlab= "Meteo_Exterior_Viento")
hist(domotic$Meteo_Exterior_Sol_Oest,xlab= "Meteo_Exterior_Sol_Oest")
hist(domotic$Meteo_Exterior_Sol_Est,xlab= "Meteo_Exterior_Sol_Est")
hist(domotic$Meteo_Exterior_Sol_Sud, xlab = "Meteo_Exterior_Sol_Sud")
hist(domotic$Meteo_Exterior_Piranometro, xlab = "Meteo_Exterior_Piranometro")
hist(domotic$Exterior_Entalpic_1, xlab = "Exterior_Entalpic_1")
hist(domotic$Exterior_Entalpic_2, xlab = "Exterior_Entalpic_2")
hist(domotic$Exterior_Entalpic_turbo, xlab = "Exterior_Entalpic_turbo")
hist(domotic$Temperature_Exterior_Sensor, xlab = "Temperature_Exterior_Sensor")
hist(domotic$Humedad_Exterior_Sensor, xlab = "Humedad_Exterior_Sensor")
hist(domotic$Day_Of_Week, xlab = "Day_Of_Week")
barplot(domotic$Temperature_Comedor_Sensor,xlab="Temperature Comedor Sensor")
barplot(domotic$Temperature_Habitacion_Sensor, xlab="Temperature Habitacion Sensor")
barplot(domotic$Weather_Temperature, xlab="Weather Temperature")
barplot(domotic$CO2_Comedor_Sensor, xlab="CO2 Comedor Sensor")
barplot(domotic$CO2_Habitacion_Senso, xlab="CO2 Habitacion Sensor")
barplot(domotic$Humedad_Comedor_Sensor, xlab="Humedad Comedor Sensor")
barplot(domotic$Humedad_Habitacion_Sensor, xlab="Humedad Habitacion Sensor")
barplot(domotic$Lighting_Comedor_Sensor, xlab="Lighting Comedor Sensor")
barplot(domotic$Lighting_Habitacion_Sensor, xlab = "Lighting Habitacion Sensor")
barplot(domotic$Precipitacion, xlab = "Precipitacion") #discrete
barplot(domotic$Meteo_Exterior_Crepusculo, xlab= "Meteo Exterior Crepusculo") #discrete
barplot(domotic$Meteo_Exterior_Viento, xlab= "Meteo_Exterior_Viento")
barplot(domotic$Meteo_Exterior_Sol_Oest,xlab= "Meteo_Exterior_Sol_Oest") #discrete
barplot(domotic$Meteo_Exterior_Sol_Est,xlab= "Meteo_Exterior_Sol_Est")
barplot(domotic$Meteo_Exterior_Sol_Sud, xlab = "Meteo_Exterior_Sol_Sud") #discrete
barplot(domotic$Meteo_Exterior_Piranometro, xlab = "Meteo_Exterior_Piranometro") #discrete
barplot(domotic$Exterior_Entalpic_1, xlab = "Exterior_Entalpic_1")
barplot(domotic$Exterior_Entalpic_2, xlab = "Exterior_Entalpic_2")
barplot(domotic$Exterior_Entalpic_turbo, xlab = "Exterior_Entalpic_turbo")
barplot(domotic$Temperature_Exterior_Sensor, xlab = "Temperature_Exterior_Sensor")
barplot(domotic$Humedad_Exterior_Sensor, xlab = "Humedad_Exterior_Sensor")
barplot(domotic$Day_Of_Week, xlab = "Day_Of_Week")
#####################  DATA CLEANING  #####################
#Remove Zeros columns
domotic=domotic[,c(-19,-20,-21)] #Reduced to 19 variables
#Remove rows 719, 720, and 770
domotic=domotic[c(-719,-720,-770),]
#####################  PART B & C    #####################
library(ggplot2)
library(FactoMineR)
library(factoextra)
source("http://blogs.5eanalytics.com/RCode/PCA_functions.R")
domotic_pca = PCA(domotic[,c(-1,-2)], scale.unit=T, graph=T, ncp=10)
#Method 1: Kaiser Rule and Method 2: Proportion of Variance
summary(domotic_pca)
round(domotic_pca$var$coord,3)
#Method 3: Scree Plot
fviz_screeplot(domotic_pca, ncp=10)
#Method 4: Minimal Communality
communality(domotic_pca)
#PC's with cutoff 0.5
display_pc(domotic_pca,cutoff = .5)
#Varimax rotation and place back
loadings.pcarot= varimax(domotic_pca$var$coord)$loadings
domotic_pca$var$coord = loadings.pcarot
######### PART D #########
plot(domotic_pca, choix  ="var")
display_pc(domotic_pca, cutoff = .5)
summary(domotic_pca)
######### PART E #########
#Matrix multiplication
round(domotic_pca$var$coord[,1:5],3) # show 5 dimensions
PC = as.matrix(domotic[,c(-1,-2)]) %*% as.matrix(domotic_pca$var$coord[,1:5])
colnames(PC) = c("LIGHTING & WEATHER", "TEMPERATURE", "CO2", "HUMIDITY","PRECIPITATION")
domotic_updated =cbind(domotic, PC)
domotic_final = domotic_updated[,c(1:2,22:26)]
str(domotic_final)
round(cor(domotic_final[,c(-1,-2)], use="pairwise.complete.obs"),3)
library(corrplot)
corrplot(cor(domotic_final[,c(-1,-2)]))
library(GPArotation)
drug_dataset <- read.csv("~/Documents/A_Hofstra University/Spring 2025/IT 270 A - Dr Alex/HW2/datasets_drug_consumption.csv", row.names=1)
View(drug_dataset)
summary(drug_dataset)  #no blank fields
str(drug_dataset)
help(boxplot)
boxplot(age, xlab = "age")
boxplot(age, xlab = "age")#Check if variables are correlated
boxplot(age, xlab = "age")
boxplot(drug_dataset$age, xlab = "age")
boxplot(drug_dataset$age, xlab = "age")
boxplot(drug_dataset$X.gender, xlab = "gender")
boxplot(drug_dataset$education, xlab = "education")
boxplot(drug_dataset$country, xlab = "country")
boxplot(drug_dataset$ethnicity, xlab = "ethnicity")
boxplot(drug_dataset$Nscore, xlab = "N-score")
boxplot(drug_dataset$Oscore, xlab = "O-score")
boxplot(drug_dataset$Ascore, xlab = "A-score")
boxplot(drug_dataset$Implusive, xlab = "Implusive")
boxplot(drug_dataset$SS, xlab = "SS")
boxplot(drug_dataset$Alcohol, xlab = "Alcohol")
boxplot(drug_dataset$SS, xlab = "SS")
boxplot(drug_dataset$Alcohol, xlab = "Alcohol")
boxplot(drug_dataset$Implusive, xlab = "Implusive")
boxplot(drug_dataset$, xlab = "Implusive")
boxplot(drug_dataset$Impulsive, xlab = "Implusive")
boxplot(drug_dataset$SS, xlab = "SS")
boxplot(drug_dataset$Alcohol, xlab = "Alcohol")
boxplot(drug_dataset$Amphet, xlab = "Amphet")
boxplot(drug_dataset$Amyl, xlab = "Amyl")
boxplot(drug_dataset$Benzos, xlab = "Benzos")
boxplot(drug_dataset$Caff, xlab = "Caff")
boxplot(drug_dataset$Cannabis, xlab = "Cannabis")
boxplot(drug_dataset$Choc, xlab = "Choc")
boxplot(drug_dataset$Coke, xlab = "Coke")
boxplot(drug_dataset$Crack, xlab = "Crack")
boxplot(drug_dataset$Ecstasy, xlab = "Ecstasy")
boxplot(drug_dataset$Heroin, xlab = "Heroin")
boxplot(drug_dataset$Ketamine, xlab = "Ketamine")
boxplot(drug_dataset$Legalh, xlab = "Legalh")
boxplot(drug_dataset$LSD, xlab = "LSD")
boxplot(drug_dataset$Meth, xlab = "Meth")
boxplot(drug_dataset$Mushrooms, xlab = "Mushrooms")
boxplot(drug_dataset$Nicotine, xlab = "Nicotine")
boxplot(drug_dataset$Semer, xlab = "Semer")
boxplot(drug_dataset$VSA, xlab = "VSA")
#Check if variables are correlated
#Hnull : Data is not correlated. Ha (alternative hypothsis): data is correlated.
#If pvalue<0.5, reject the null hypothsis (so Ha is correct). else do not reject.
# Reject H0.
cormat = cor(drug_clean)
cortest.bartlett(cormat, n=nrow(drug_clean))
#Factor analysis of the data
#Rotation: None. All SS loadings indicate 2 factors.
f = factanal(drug_dataset[,c(-1:-13)],factors=2, rotation="none")
boxplot(drug_dataset$age, xlab = "age")
boxplot(drug_dataset$X.gender, xlab = "gender")
boxplot(drug_dataset$education, xlab = "education")
boxplot(drug_dataset$country, xlab = "country")
boxplot(drug_dataset$ethnicity, xlab = "ethnicity")
boxplot(drug_dataset$Nscore, xlab = "N-score")
boxplot(drug_dataset$Oscore, xlab = "O-score")
boxplot(drug_dataset$Ascore, xlab = "A-score")
boxplot(drug_dataset$Impulsive, xlab = "Implusive")
boxplot(drug_dataset$SS, xlab = "SS")
boxplot(drug_dataset$Alcohol, xlab = "Alcohol")
boxplot(drug_dataset$Amphet, xlab = "Amphet")
boxplot(drug_dataset$Amyl, xlab = "Amyl")
boxplot(drug_dataset$Benzos, xlab = "Benzos")
boxplot(drug_dataset$Caff, xlab = "Caff")
boxplot(drug_dataset$Cannabis, xlab = "Cannabis")
boxplot(drug_dataset$Choc, xlab = "Choc")
boxplot(drug_dataset$Coke, xlab = "Coke")
boxplot(drug_dataset$Crack, xlab = "Crack")
boxplot(drug_dataset$Ecstasy, xlab = "Ecstasy")
boxplot(drug_dataset$Heroin, xlab = "Heroin")
boxplot(drug_dataset$Ketamine, xlab = "Ketamine")
boxplot(drug_dataset$Legalh, xlab = "Legalh")
boxplot(drug_dataset$LSD, xlab = "LSD")
boxplot(drug_dataset$Meth, xlab = "Meth")
boxplot(drug_dataset$Mushrooms, xlab = "Mushrooms")
boxplot(drug_dataset$Nicotine, xlab = "Nicotine")
boxplot(drug_dataset$Semer, xlab = "Semer")
boxplot(drug_dataset$VSA, xlab = "VSA")
out1=boxplot.stats(drug_dataset$education)$out
out1
which(drug_dataset$educatio %in% c(out1))
out1=boxplot.stats(drug_dataset$education)$out
out1
which(drug_dataset$education %in% c(out1))
out2=boxplot.stats(drug_dataset$Nscore)$out
which(drug_dataset$Nscore %in% c(out2))
out1=boxplot.stats(drug_dataset$education)$out
out1
which(drug_dataset$education %in% c(out1))
out2=boxplot.stats(drug_dataset$Nscore)$out
out2
which(drug_dataset$Nscore %in% c(out2))
out3=boxplot.stats(drug_dataset$Oscore)$out
out3
which(drug_dataset$Oscore %in% c(out3))
count(out1)
length(out1)
str(drug_dataset)
summary(drug_dataset)  #no blank fields
out2=boxplot.stats(drug_dataset$ethnicity)$out
which(drug_dataset$ethnicity %in% c(out2))
out2
sort(out2)
sort(out2>1.9)
which(drug_dataset$ethnicity %in% c(out2>1.9))
out2=boxplot.stats(drug_dataset$ethnicity)$out
out2
which(drug_dataset$ethnicity %in% 1.09725)
which(drug_dataset$ethnicity %in% "1.09725")
c(out2)
which(drug_dataset$ethnicity %in% c(1.90725))
out3=boxplot.stats(drug_dataset$Nscore)$out
out3
which(drug_dataset$Nscore %in% c(out3))
length(out3)
out3=boxplot.stats(drug_dataset$Nscore)$out
which(drug_dataset$Nscore %in% c(out3))
out3
out4=boxplot.stats(drug_dataset$Oscore)$out
which(drug_dataset$Oscore %in% c(out4))
out4
out5=boxplot.stats(drug_dataset$Ascore)$out
which(drug_dataset$Ascore %in% c(out5))
length(out5)
out5
out6=boxplot.stats(drug_dataset$Impulsive)$out
out6
which(drug_dataset$Impulsive %in% c(out6))
out7=boxplot.stats(drug_dataset$Alcohol)$out
out7
which(drug_dataset$Alcohol %in% c(out7))
out8=boxplot.stats(drug_dataset$Amphet)$out
which(drug_dataset$Amphet %in% c(out8))
out8
out9=boxplot.stats(drug_dataset$Coke)$out
which(drug_dataset$Coke %in% c(out9))
out9
summary(drug_dataset)  #no blank fields
round(summary(drug_dataset),3)  #no blank fields
summary(drug_dataset) #no blank fields
#Factor analysis of the data
#Rotation: None. All SS loadings indicate 2 factors.
f = factanal(drug_dataset[,c(-1:-13)],factors=2, rotation="none")
print(f,cutoff=.4)
f = factanal(drug_dataset[,c(-1:-13)],factors=3, rotation="none")
print(f,cutoff=.1)
f = factanal(drug_dataset[,c(-1:-13)],factors=6, rotation="none")
print(f,cutoff=.4)
#Factor analysis of the data
#Rotation: None. All SS loadings indicate 2 factors.
f = factanal(drug_dataset[,c(-1:-13)],factors=2, rotation="none")
print(f,cutoff=.4)
f = factanal(drug_dataset[,c(-1:-13)],factors=3, rotation="none")
print(f,cutoff=.1)
drug_dataset <- read.csv("~/Documents/A_Hofstra University/Spring 2025/IT 270 A - Dr Alex/HW2/datasets_drug_consumption.csv", row.names=1)
str(drug_dataset)
#Data Cleaning
drug_dataset = drug_dataset[c(-546, -822, -899, -1060, -1463, -1746), ]
#Check if variables are correlated
#Hnull : Data is not correlated. Ha (alternative hypothsis): data is correlated.
#If pvalue<0.5, reject the null hypothsis (so Ha is correct). else do not reject.
# Reject H0.
cormat = cor(drug_dataset[,c(-1:-13)])
cortest.bartlett(cormat, n=nrow(drug_dataset[,c(-1:-13)])
cortest.bartlett(cormat, n=nrow(drug_dataset[,c(-1:-13)]))
#Check if variables are correlated
#Hnull : Data is not correlated. Ha (alternative hypothsis): data is correlated.
#If pvalue<0.5, reject the null hypothsis (so Ha is correct). else do not reject.
# Reject H0.
cormat = cor(drug_dataset[,c(-1:-13)])
cortest.bartlett(cormat, n=nrow(drug_dataset[,c(-1:-13)]))
library(GPArotation)
cortest.bartlett(cormat, n=nrow(drug_dataset[,c(-1:-13)]))
#Check if variables are correlated
#Hnull : Data is not correlated. Ha (alternative hypothsis): data is correlated.
#If pvalue<0.5, reject the null hypothsis (so Ha is correct). else do not reject.
# Reject H0.
cormat = cor(drug_dataset[,c(-1:-13)])
library(psych)
cortest.bartlett(cormat, n=nrow(drug_dataset[,c(-1:-13)]))
#Factor analysis of the data
#Rotation: None. All SS loadings indicate 2 factors.
f = factanal(drug_dataset[,c(-1:-13)],factors=2, rotation="none")
f = factanal(drug_dataset[,c(-1:-13)],factors=6, rotation="none")
print(f,cutoff=.4)
f = factanal(drug_dataset[,c(-1:-13)],factors=5, rotation="varimax")
print(f,cutoff=.4) #4 factors
f = factanal(drug_dataset[,c(-1:-13)],factors=7, rotation="varimax")
print(f,cutoff=.4) #4 factors
communality(f)
f = factanal(drug_dataset[,c(-1:-13)],factors=6, rotation="promax")
print(f,cutoff=.4) #4 factors
f = factanal(drug_dataset[,c(-1:-13)],factors=4, rotation="varimax")
print(f,cutoff=.4) #3 factors
f = factanal(drug_dataset[,c(-1:-13)],factors=7, rotation="varimax")
print(f,cutoff=.4) #4 factors
f = factanal(drug_dataset[,c(-1:-13)],factors=6, rotation="promax")
print(f,cutoff=.4) #4 factors
f = factanal(drug_dataset[,c(-1:-13)],factors=5, rotation="promax")
print(f,cutoff=.4) #4 factors
f = factanal(drug_dataset[,c(-1:-13)],factors=4, rotation="promax")
print(f,cutoff=.4) #4 factors
f = factanal(drug_dataset[,c(-1:-13)],factors=5, rotation="promax")
print(f,cutoff=.4) #4 factors
f = factanal(drug_dataset[,c(-1:-13)],factors=6, rotation="promax")
print(f,cutoff=.1) #4 factors
fviz_screeplot(f, ncp=10)
fviz_screeplot(f, ncp=4)
f = factanal(drug_dataset[,c(-1:-13)],factors=5, rotation="promax")
print(f,cutoff=.4) #4 factors
f = factanal(drug_dataset[,c(-1:-13)],factors=10, rotation="promax")
print(f,cutoff=.1) #4 factors
f = factanal(drug_dataset[,c(-1:-13)],factors=10, rotation="promax")
print(f,cutoff=.4) #4 factors
f = factanal(drug_dataset[,c(-1:-13)],factors=7, rotation="promax")
print(f,cutoff=.4) #4 factors
f = factanal(drug_dataset[,c(-1:-13)],factors=7, rotation="promax")
print(f,cutoff=.4) #4 factors
f = factanal(drug_dataset[,c(-1:-13)],factors=6, rotation="promax")
print(f,cutoff=.4) #4 factors
f = factanal(drug_dataset[,c(-1:-13)],factors=5, rotation="promax")
print(f,cutoff=.4) #4 factors
f = factanal(drug_dataset[,c(-1:-13)],factors=6, rotation="promax")
print(f,cutoff=.4) #4 factors
f = factanal(drug_dataset[,c(-1:-13)],factors=4, rotation="promax")
print(f,cutoff=.4) #4 factors
##################### PART A: EXPLORATION   #####################
View(domotic)
##################### PART A: EXPLORATION   #####################
View(domotic)
domotic <- read.csv("~/Documents/A_Hofstra University/Spring 2025/IT 270 A - Dr Alex/HW2/datasets_domotic1.txt", sep="")
##################### PART A: EXPLORATION   #####################
View(domotic)
unique(domotic$Precipitacion)
library(GPArotation)
library(psych)
drug_dataset <- read.csv("~/Documents/A_Hofstra University/Spring 2025/IT 270 A - Dr Alex/HW2/datasets_drug_consumption.csv", row.names=1)
View(drug_dataset)
summary(drug_dataset) #no blank fields
str(drug_dataset)
boxplot(drug_dataset$age, xlab = "age")
boxplot(drug_dataset$X.gender, xlab = "gender")
boxplot(drug_dataset$education, xlab = "education")
boxplot(drug_dataset$country, xlab = "country")
boxplot(drug_dataset$ethnicity, xlab = "ethnicity")
boxplot(drug_dataset$Nscore, xlab = "N-score")
boxplot(drug_dataset$Oscore, xlab = "O-score")
boxplot(drug_dataset$Ascore, xlab = "A-score")
boxplot(drug_dataset$Impulsive, xlab = "Implusive")
boxplot(drug_dataset$SS, xlab = "SS")
boxplot(drug_dataset$Alcohol, xlab = "Alcohol")
boxplot(drug_dataset$Amphet, xlab = "Amphet")
boxplot(drug_dataset$Amyl, xlab = "Amyl")
boxplot(drug_dataset$Benzos, xlab = "Benzos")
boxplot(drug_dataset$Caff, xlab = "Caff")
boxplot(drug_dataset$Cannabis, xlab = "Cannabis")
boxplot(drug_dataset$Choc, xlab = "Choc")
boxplot(drug_dataset$Coke, xlab = "Coke")
boxplot(drug_dataset$Crack, xlab = "Crack")
boxplot(drug_dataset$Ecstasy, xlab = "Ecstasy")
boxplot(drug_dataset$Heroin, xlab = "Heroin")
boxplot(drug_dataset$Ketamine, xlab = "Ketamine")
boxplot(drug_dataset$Legalh, xlab = "Legalh")
boxplot(drug_dataset$LSD, xlab = "LSD")
boxplot(drug_dataset$Meth, xlab = "Meth")
boxplot(drug_dataset$Mushrooms, xlab = "Mushrooms")
boxplot(drug_dataset$Nicotine, xlab = "Nicotine")
boxplot(drug_dataset$Semer, xlab = "Semer")
boxplot(drug_dataset$VSA, xlab = "VSA")
#Outlier values and observations
out1=boxplot.stats(drug_dataset$education)$out
which(drug_dataset$education %in% c(out1))
length(out1)
out2=boxplot.stats(drug_dataset$ethnicity)$out
which(drug_dataset$ethnicity %in% c(1.90725))
out3=boxplot.stats(drug_dataset$Nscore)$out
which(drug_dataset$Nscore %in% c(out3))
length(out3)
out4=boxplot.stats(drug_dataset$Oscore)$out
which(drug_dataset$Oscore %in% c(out4))
length(out4)
out5=boxplot.stats(drug_dataset$Ascore)$out
which(drug_dataset$Ascore %in% c(out5))
length(out5)
out6=boxplot.stats(drug_dataset$Impulsive)$out
which(drug_dataset$Impulsive %in% c(out6))
out7=boxplot.stats(drug_dataset$Alcohol)$out
which(drug_dataset$Alcohol %in% c(out7))
out8=boxplot.stats(drug_dataset$Amphet)$out
which(drug_dataset$Amphet %in% c(out8))
out9=boxplot.stats(drug_dataset$Coke)$out
which(drug_dataset$Coke %in% c(out9))
#Data Cleaning
drug_dataset = drug_dataset[c(-546, -822, -899, -1060, -1463, -1746), ]
#Check if variables are correlated
#Hnull : Data is not correlated. Ha (alternative hypothsis): data is correlated.
#If pvalue<0.5, reject the null hypothsis (so Ha is correct). else do not reject.
# Reject H0.
cormat = cor(drug_dataset[,c(-1:-13)])
cortest.bartlett(cormat, n=nrow(drug_dataset[,c(-1:-13)]))
#Factor analysis of the data
#Rotation: None. All SS loadings indicate 2 factors.
f = factanal(drug_dataset[,c(-1:-13)],factors=2, rotation="none")
print(f,cutoff=.4)
f = factanal(drug_dataset[,c(-1:-13)],factors=3, rotation="none")
print(f,cutoff=.1)
f = factanal(drug_dataset[,c(-1:-13)],factors=6, rotation="none")
print(f,cutoff=.4)
f = factanal(drug_dataset[,c(-1:-13)],factors=3, rotation="varimax")
print(f,cutoff=.4) #3 factors
f = factanal(drug_dataset[,c(-1:-13)],factors=4, rotation="varimax")
print(f,cutoff=.4) #3 factors
f = factanal(drug_dataset[,c(-1:-13)],factors=7, rotation="varimax")
print(f,cutoff=.4) #4 factors
f = factanal(drug_dataset[,c(-1:-13)],factors=5, rotation="promax")
print(f,cutoff=.4) #4 factors
f = factanal(drug_dataset[,c(-1:-13)],factors=6, rotation="promax")
print(f,cutoff=.4) #4 factors
##FINAL RESULT
f = factanal(drug_dataset[,c(-1:-13)],factors=4, rotation="promax")
print(f,cutoff=.4) #4 factors
